//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Globalization;
using System.Text.RegularExpressions;

// 
// This source code was auto-generated by xsd, Version=4.6.1055.0.
// 
namespace BO {

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
	[System.SerializableAttribute()]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.mat.com/budzet")]
	[System.Xml.Serialization.XmlRootAttribute("Formularz_zgloszeniowy", Namespace = "http://www.mat.com/budzet", IsNullable = false)]
	public partial class typ_formularza : IDataErrorInfo, INotifyPropertyChanged {
		public static Action<bool, string> isValid;

		private string imie_nazwiskoField;

		private typ_adres adresField;

		private typ_kontakt kontaktField;

		private string tytułField;

		private string lokalizacjaField;

		private typ_wlasnosc_terenu własność_terenuField;

		private string opisField;

		private string skrót_opisuField;

		private typ_koszta_projektu koszta_projektuField;


		public string this[string columnName] {
			get {
				string result = null;
				bool isOk = true;
				if (columnName == "Imie_nazwisko") {
					Regex rgx = new Regex(@"^([A-ZĄĆĘŁŃÓŚŻŹ][a-ząćęłńóśżź]+[ -]?){2,}$");
					isOk = rgx.IsMatch(Imie_nazwisko);
				}

				else if (columnName == "Imie_nazwisko") {
					Regex rgx = new Regex(@"^Nie dotyczy$");
					isOk = rgx.IsMatch(Imie_nazwisko);
				}
				else if (columnName == "Opis") {
					isOk = Opis.Length <= 180 && Opis.Length > 0;
				}
				else if (columnName == "Skrót_opisu") {
					isOk = Skrót_opisu.Length <= 60 && Skrót_opisu.Length > 0;
				}
				else if (columnName == "Tytuł") {
					isOk = Tytuł.Length > 0;
				}
				else if (columnName == "Lokalizacja") {
					isOk = Lokalizacja.Length > 0;
				}

				isValid(isOk, columnName);
				if (isOk) return result;
				return "To pole jest błędne!";
			}
		}
		public string Error {
			get {
				return null;
			}
		}

		/// <remarks/>
		public string Imie_nazwisko {
			get {
				return this.imie_nazwiskoField;
			}
			set {
				if (value != this.imie_nazwiskoField) {
					this.imie_nazwiskoField = value;
					OnPropertyChanged("Imie_nazwisko");
				}

			}
		}

		/// <remarks/>
		public typ_adres Adres {
			get {
				return this.adresField;
			}
			set {
				this.adresField = value;
			}
		}

		/// <remarks/>
		public typ_kontakt Kontakt {
			get {
				return this.kontaktField;
			}
			set {
				if (value != this.kontaktField) {
					this.kontaktField = value;
					OnPropertyChanged("Kontakt");
				}

			}
		}

		/// <remarks/>
		public string Tytuł {
			get {
				return this.tytułField;
			}
			set {
				if (value != this.tytułField) {
					this.tytułField = value;
					OnPropertyChanged("Tytuł");
				}

			}
		}

		/// <remarks/>
		public string Lokalizacja {
			get {
				return this.lokalizacjaField;
			}
			set {
				if (value != this.lokalizacjaField) {
					this.lokalizacjaField = value;
					OnPropertyChanged("Lokalizacja");
				}

			}
		}

		/// <remarks/>
		public typ_wlasnosc_terenu Własność_terenu {
			get {
				return this.własność_terenuField;
			}
			set {
				if (value != this.własność_terenuField) {
					this.własność_terenuField = value;
					OnPropertyChanged("Własność_terenu");
				}

			}
		}

		/// <remarks/>
		public string Opis {
			get {
				return this.opisField;
			}
			set {
				if (value != this.opisField) {
					this.opisField = value;
					OnPropertyChanged("Opis");
				}

			}
		}

		/// <remarks/>
		public string Skrót_opisu {
			get {
				return this.skrót_opisuField;
			}
			set {
				if (value != this.skrót_opisuField) {
					this.skrót_opisuField = value;
					OnPropertyChanged("Skrót_opisu");
				}

			}
		}

		/// <remarks/>
		public typ_koszta_projektu Koszta_projektu {
			get {
				return this.koszta_projektuField;
			}
			set {
				if (value != this.koszta_projektuField) {
					this.koszta_projektuField = value;
					OnPropertyChanged("Koszta_projektu");
				}

			}
		}



		public event PropertyChangedEventHandler PropertyChanged;



		protected void OnPropertyChanged(string propertyName) {
			PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
	[System.SerializableAttribute()]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.mat.com/budzet")]
	public partial class typ_adres : IDataErrorInfo, INotifyPropertyChanged {

		private string miejscowosc_ulicaField;

		private string kod_pocztowyField;

		private string nr_domuField;

		private string nr_mieszkaniaField;



		/// <remarks/>
		public string Miejscowosc_ulica {
			get {
				return this.miejscowosc_ulicaField;
			}
			set {
				if (value != this.miejscowosc_ulicaField) {
					this.miejscowosc_ulicaField = value;
					OnPropertyChanged("Miejscowosc_ulica");
				}

			}
		}

		/// <remarks/>
		public string Kod_pocztowy {
			get {
				return this.kod_pocztowyField;
			}
			set {
				if (value != this.kod_pocztowyField) {
					this.kod_pocztowyField = value;
					OnPropertyChanged("Kod_pocztowy");
				}

			}
		}

		/// <remarks/>
		public string Nr_domu {
			get {
				return this.nr_domuField;
			}
			set {
				if (value != this.nr_domuField) {
					this.nr_domuField = value;
					OnPropertyChanged("Nr_domu");
				}

			}
		}

		/// <remarks/>
		public string Nr_mieszkania {
			get {
				return this.nr_mieszkaniaField;
			}
			set {
				if (value != this.nr_mieszkaniaField) {
					this.nr_mieszkaniaField = value;
					OnPropertyChanged("Nr_mieszkania");
					if(this.nr_mieszkaniaField == "") {
						Nr_mieszkania = null;
					}
				}

			}
		}
		public static Action<bool, string> isValid;
		public string this[string columnName] {

			get {
				bool isOk = true;
				string result = null;
				if (columnName == "Nr_domu") {
					Regex rgx = new Regex(@"^[0-9]+[/A-Z0-9]*$");
					isOk = rgx.IsMatch(Nr_domu);
				}
				else if (columnName == "Nr_mieszkania") {
					Regex rgx = new Regex(@"^[0-9]+[/A-Z0-9]*$");
					isOk = rgx.IsMatch(Nr_mieszkania) || Nr_mieszkania == string.Empty;
				}
				else if (columnName == "Kod_pocztowy") {
					Regex rgx = new Regex(@"^[0-9]{2}-[0-9]{3}$");
					isOk = rgx.IsMatch(Kod_pocztowy);
				}
				else if (columnName == "Miejscowosc_ulica") {
					isOk = Miejscowosc_ulica.Length != 0;
				}
				isValid(isOk, columnName);
				if (isOk) return result;
				return "To pole jest błędne!";
			}
		}
		public string Error {
			get {
				return this[string.Empty];
			}
		}

		public event PropertyChangedEventHandler PropertyChanged;

		protected void OnPropertyChanged(string propertyName) {
			PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
	[System.SerializableAttribute()]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.mat.com/budzet")]
	public partial class typ_ilość : IDataErrorInfo, INotifyPropertyChanged {

		private object itemsField;

		private string jednostkaField;

		/// <remarks/>
		[System.Xml.Serialization.XmlElementAttribute("Liczba", typeof(float))]
		[System.Xml.Serialization.XmlElementAttribute("ND", typeof(string))]
		public object Items {
			get {
				return this.itemsField;
			}
			set {
				if (value != this.itemsField) {
					this.itemsField = value;
					OnPropertyChanged("Items");
				}

			}
		}

		/// <remarks/>
		[System.Xml.Serialization.XmlAttributeAttribute()]
		public string jednostka {
			get {
				return this.jednostkaField;
			}
			set {
				if (value != this.jednostkaField) {
					this.jednostkaField = value;
					OnPropertyChanged("jednostka");
				}

			}
		}
		public static Action<bool, string> isValid;
		public string this[string columnName] {
			get {
				bool isOk = true;
				if (columnName == "Items") {
					if (Items.GetType() == typeof(string)) {
						isOk = Items.ToString() == "Nie dotyczy";
					}
					else {
						float f;
						if (float.TryParse(Items.ToString(), NumberStyles.Any, CultureInfo.InvariantCulture, out f)) {
							isOk = f >= 0;
						}
						else isOk = false;
					}
				}
				else if (columnName == "jednostka") {

				}
				isValid(isOk, columnName);
				if (isOk) return null;
				else return "To pole jest błędne!";
			}
		}
		public string Error {
			get {
				return null;
			}
		}

		public event PropertyChangedEventHandler PropertyChanged;

		protected void OnPropertyChanged(string propertyName) {
			PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
	[System.SerializableAttribute()]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.mat.com/budzet")]
	public partial class typ_koszt : IDataErrorInfo, INotifyPropertyChanged {

		private string nazwaField;

		private typ_kategoria kategoriaField;

		private string miejsceField;

		private typ_ilość ilośćField;

		private string kwotaField;

		/// <remarks/>
		public string Nazwa {
			get {
				return this.nazwaField;
			}
			set {
				if (value != this.nazwaField) {
					this.nazwaField = value;
					OnPropertyChanged("Nazwa");
				}

			}
		}

		/// <remarks/>
		public typ_kategoria Kategoria {
			get {
				return this.kategoriaField;
			}
			set {
				if (value != this.kategoriaField) {
					this.kategoriaField = value;
					OnPropertyChanged("Kategoria");
				}

			}
		}

		/// <remarks/>
		public string Miejsce {
			get {
				return this.miejsceField;
			}
			set {
				if (value != this.miejsceField) {
					this.miejsceField = value;
					OnPropertyChanged("Miejsce");
				}

			}
		}

		/// <remarks/>
		public typ_ilość Ilość {
			get {
				return this.ilośćField;
			}
			set {
				if (value != this.ilośćField) {
					this.ilośćField = value;
					OnPropertyChanged("Ilość");
				}

			}
		}

		/// <remarks/>
		[System.Xml.Serialization.XmlAttributeAttribute()]
		public string kwota {
			get {
				return this.kwotaField;
			}
			set {
				if (value != this.kwotaField) {
					this.kwotaField = value;
					OnPropertyChanged("kwota");
				}

			}
		}
		public static Action<bool, string> isValid;
		public string this[string columnName] {
			get {
				bool isOk = true;
				if (columnName == "Ilość") {
					if (Ilość.Items.GetType() == typeof(string)) {
						isOk = Ilość.Items.ToString() == "Nie dotyczy";
					}
					else {
						float f;
						if (float.TryParse(Ilość.Items.ToString(), NumberStyles.Any, CultureInfo.InvariantCulture, out f)) {
							isOk = f >= 0;
						}
						else isOk = false;
					}
				}
				else if (columnName == "Miejsce") {
					isOk = Miejsce.Length != 0;
				}
				else if (columnName == "Nazwa") {
					isOk = Nazwa.Length != 0;
				}
				else if (columnName == "kwota") {
					float f;
					if (float.TryParse(kwota.ToString().Replace(",", "."), NumberStyles.Currency, CultureInfo.InvariantCulture, out f)) {
						kwota = f.ToString().Replace(",", ".");
						isOk = true;
					}
					else isOk = false;
				}
				isValid(isOk, columnName);
				if (isOk) return null;
				else return "To pole jest błędne!";
			}
		}
		public string Error {
			get {
				return this[string.Empty];
			}
		}

		public event PropertyChangedEventHandler PropertyChanged;

		protected void OnPropertyChanged(string propertyName) {
			PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
	[System.SerializableAttribute()]
	[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.mat.com/budzet")]
	public enum typ_kategoria {

		/// <remarks/>
		Projekt,

		/// <remarks/>
		Materiały,

		/// <remarks/>
		Wykonawstwo,

		/// <remarks/>
		Usługa,

		/// <remarks/>
		Inne,
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
	[System.SerializableAttribute()]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.mat.com/budzet")]
	public partial class typ_koszta_projektu : IDataErrorInfo, INotifyPropertyChanged {

		private typ_koszt[] itemsField;


		/// <remarks/>
		[System.Xml.Serialization.XmlElementAttribute("Koszt")]
		public typ_koszt[] Items {
			get {
				return this.itemsField;
			}
			set {
				if (value != this.itemsField) {
					this.itemsField = value;
					OnPropertyChanged("Items");
				}

			}
		}


		public string this[string columnName] {
			get {
				return string.Empty;
			}
		}
		public string Error {
			get {
				return this[string.Empty];
			}
		}

		public event PropertyChangedEventHandler PropertyChanged;

		protected void OnPropertyChanged(string propertyName) {
			PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
	[System.SerializableAttribute()]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.mat.com/budzet")]
	public partial class typ_kontakt : IDataErrorInfo, INotifyPropertyChanged {

		private string nr_telefonuField;

		private string emailField;

		/// <remarks/>
		public string Nr_telefonu {
			get {
				return this.nr_telefonuField;
			}
			set {
				if (value != this.nr_telefonuField) {
					this.nr_telefonuField = value;
					OnPropertyChanged("Nr_telefonu");
				}

			}
		}

		/// <remarks/>
		public string Email {
			get {
				return this.emailField;
			}
			set {
				if (value != this.emailField) {
					this.emailField = value;
					OnPropertyChanged("Email");
				}

			}
		}
		public static Action<bool, string> isValid;
		public string this[string columnName] {
			get {
				bool isOk = true;
				if (columnName == "Nr_telefonu") {
					Regex rgx = new Regex(@"^[0-9]{9}$");
					isOk = rgx.IsMatch(Nr_telefonu);
				}
				else if (columnName == "Email") {
					Regex rgx = new Regex(@"[^@]+@[^\.]+\..+");
					isOk = rgx.IsMatch(Email);
				}
				isValid(isOk, columnName);
				if (isOk) return null;
				else return "To pole jest błędne!";
			}
		}
		public string Error {
			get {
				return null;
			}
		}

		public event PropertyChangedEventHandler PropertyChanged;

		protected void OnPropertyChanged(string propertyName) {
			PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
	[System.SerializableAttribute()]
	[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.mat.com/budzet")]
	public enum typ_wlasnosc_terenu {

		/// <remarks/>
		gminy,

		/// <remarks/>
		miasta,

		/// <remarks/>
		powiatu,

		/// <remarks/>
		województwa,

		/// <remarks/>
		inne,
	}
}

